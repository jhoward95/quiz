What happens when you initialize a repository? Why do you need to do it?
you create a new repository. Do git init and it will create a new repository. You do this so you can write new commits to your files.

How is the staging area different from the working directory and the repository? What value do you think it offers?
The staging area can take different files from the working directory and combine them into one commit. This will save time when writing commits.

How can you use the staging area to make sure you have one commit per logical change? You can use git diff --staged to make sure you are only writing one commit for each logical change you are doing.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
When you want to make changes to your program but you want to see how they work before adding them to the master branch. Branches allow you to create copies of your file and make changes to them without changing the orginal file.

How do the diagrams help you visualize the branch structure?
To see if commits will be unreachable when someone used git log.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do? Being able to have access to the commits on those branches. Why we represent it on the diagram shows us that these branches have megred together. 

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually? Pros of using Git's automatic merging is that the user does not have to do this and let Git to do it which will save time. The con, however, is that Git's automatic merging may have more merge conflicts because Git wants to make sure everything is right. 

